<?php

/**
 * @file
 * Drupal Module: Marketo
 */

/**
 * Implements hook_menu().
 */
function marketo_menu() {
  // Module settings.
  $items['admin/config/search/marketo'] = array(
    'title' => 'Marketo',
    'description' => 'Marketo configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('marketo_admin_settings'),
    'access arguments' => array('access administration pages'),
    'file' => 'marketo.admin.inc',
    'file path' => drupal_get_path('module', 'marketo'),
  );
  return $items;
}

/**
 * Implements hook_help().
 */
function marketo_help($path, $arg) {
  switch ($path) {
    case 'admin/config/search/marketo':
      return t("Marketo help text");

    case 'admin/help#marketo':
      $output = '<p>' . t('This is help text for the Marketo help page') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_init().
 */
function marketo_init() {
  $_SESSION['marketo_data'] = isset($_SESSION['marketo_data']) ? $_SESSION['marketo_data'] : array();
}

/**
 * Implements template_preprocess_page().
 */
function marketo_page_alter(&$page) {
  if (_marketo_visibility_pages()) {

    global $user;
    _marketo_output_tracking_code();

    $marketo_data = isset($_SESSION['marketo_data']) ? $_SESSION['marketo_data'] : array();
    drupal_alter('marketo_data', $marketo_data);

    if (isset($marketo_data['Email'])) {
      // We were given a specific Email address to use
      $email = $marketo_data['Email'];
    }
    else if (isset($user->mail)) {
      // We shall assume the current logged in user
      $email = $user->mail;
    }
    else {
      // We don't have enough to work with
      $email = NULL;
    }

    if (empty($marketo_data) || is_null($email)) {
      // We don't have enough to work with
    }
    else {
      $key = variable_get('marketo_munchkin_api_private_key', '');
      $hash = hash('sha1', $key . $email);
      drupal_add_js(array('marketo' => array('lead_type' => 'associateLead', 'data' => $marketo_data, 'hash' => $hash)), 'setting');
    }

    unset($_SESSION['marketo_data']);
  }
}

function _marketo_output_tracking_code() {
  $marketo_munchkin_tracking_code_type = variable_get('marketo_munchkin_tracking_code_type');
  $marketo_munchkin_account_id = variable_get('marketo_munchkin_account_id');
  $marketo_munchkin_javascript_library = '//' . str_replace(array('http://', 'https://', '//'), '', variable_get('marketo_munchkin_javascript_library'));

  drupal_add_js(array('marketo' => array('key' => $marketo_munchkin_account_id, 'library' => $marketo_munchkin_javascript_library)), 'setting');

  if ($marketo_munchkin_tracking_code_type == 'simple') {
    drupal_add_js($marketo_munchkin_javascript_library, array('type' => 'external', 'scope' => 'footer', 'weight' => 5));
  }

  drupal_add_js(drupal_get_path('module', 'marketo') . '/js/marketo.' . $marketo_munchkin_tracking_code_type . '.js', array('type' => 'file', 'scope' => 'footer', 'weight' => 6));
}

/**
 * Based on visibility setting this function returns TRUE if Marketo code should
 * be added to the current page and otherwise FALSE.
 */
function _marketo_visibility_pages() {
  static $page_match;
  module_load_include('inc', 'marketo', 'marketo');

  // Cache visibility result if function is called more than once.
  if (!isset($page_match)) {

    $visibility = variable_get('marketo_visibility_pages', 0);
    $setting_pages = variable_get('marketo_pages', MARKETO_PAGES);

    // Match path if necessary.
    if (!empty($setting_pages)) {
      // Convert path to lowercase. This allows comparison of the same path
      // with different case. Ex: /Page, /page, /PAGE.
      $pages = drupal_strtolower($setting_pages);
      if ($visibility < 2) {
        // Convert the Drupal path to lowercase
        $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
        // Compare the lowercase internal and lowercase path alias (if any).
        $page_match = drupal_match_path($path, $pages);
        if ($path != $_GET['q']) {
          $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
        }
        // When $visibility has a value of 0, the tracking code is displayed on
        // all pages except those listed in $pages. When set to 1, it
        // is displayed only on those pages listed in $pages.
        $page_match = !($visibility xor $page_match);
      }
      elseif (module_exists('php')) {
        $page_match = php_eval($setting_pages);
      }
      else {
        $page_match = FALSE;
      }
    }
    else {
      $page_match = TRUE;
    }
  }
  return $page_match;
}

/**
 * Implementatation of hook_form_FORM_ID_alter().
 * This function is reponsible for adding the form-id mapping values to the Component add/edit page
 * Note: this isn't used for the fieldset type.
 */
function marketo_form_webform_configure_form_alter(&$form, &$form_state, $form_id) {
  module_load_include('inc', 'marketo', 'marketo');

  $node = $form['#node'];

  $result = db_select(MARKETO_SCHEMA_WEBFORM)
      ->fields(MARKETO_SCHEMA_WEBFORM)
      ->condition('nid', $node->nid, '=')
      ->execute()
      ->fetchAssoc();

  $form['#submit'][] = '_marketo_save_webform';
  $form['node']['webform']['marketo'] = array(
    '#title' => t('Marketo Options'),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE
  );
  $form['node']['webform']['marketo']['marketo_webform_is_active'] = array(
    '#title' => t('Capture Data'),
    '#type' => 'checkbox',
    '#description' => t('If checked, captured form information will be sent to Marketo'),
    '#default_value' => $result['is_active'],
  );
}

function _marketo_save_webform($form, &$form_state) {
  module_load_include('inc', 'marketo', 'marketo');

  $node = $form['#node'];
  $values = $form_state['values'];

  $nid = $node->nid;

  db_delete(MARKETO_SCHEMA_WEBFORM)
      ->condition('nid', $nid)
      ->execute();

  db_insert(MARKETO_SCHEMA_WEBFORM)
      ->fields(array(
        'nid' => $nid,
        MARKETO_WEBFORM_FIELD_ACTIVE => $values['marketo_webform_is_active']
      ))
      ->execute();
}

function marketo_webform_component_insert($component) {
  module_load_include('inc', 'marketo', 'marketo');
  db_insert(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->fields(array(
        'nid' => $component['nid'],
        'cid' => $component['cid'],
        MARKETO_WEBFORM_COMPONENT_KEY => $component['marketo']['marketo_webform_component_key']
      ))
      ->execute();
}

function marketo_webform_component_update($component) {
  module_load_include('inc', 'marketo', 'marketo');
  db_update(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->fields(array(
        MARKETO_WEBFORM_COMPONENT_KEY => $component['marketo']['marketo_webform_component_key'],
      ))
      ->condition('nid', $component['nid'])
      ->condition('cid', $component['cid'])
      ->execute();
}

function marketo_webform_component_delete($component) {
  module_load_include('inc', 'marketo', 'marketo');
  db_delete(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->condition('nid', $component['nid'])
      ->condition('cid', $component['cid'])
      ->execute();
}

function marketo_form_webform_component_edit_form_alter(&$form, &$form_state, $form_id) {
  module_load_include('inc', 'marketo', 'marketo');

  $nid = $form['nid']['#value'];
  $cid = $form['cid']['#value'];

  $result = db_select(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->fields(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->condition('nid', $nid, '=')
      ->condition('cid', $cid, '=')
      ->execute()
      ->fetchAssoc();

  $form['marketo'] = array(
    '#title' => t('Marketo Options'),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE
  );
  $form['marketo']['marketo_webform_component_key'] = array(
    '#title' => t('Map to Marketo field'),
    '#type' => 'select',
    '#description' => t('Select the field this component should be mapped to in Marketo'),
    '#options' => array(
      'none' => t('- None -'),
      'Email' => t('Email'),
      'FirstName' => t('FirstName'),
      'LastName' => t('LastName')
    ),
    '#default_value' => $result[MARKETO_WEBFORM_COMPONENT_KEY],
  );
}

function marketo_webform_submission_insert($node, $submission) {
  $data = _marketo_webform_component_mapping($node, $submission);
  $_SESSION['marketo_data'] = array_merge($_SESSION['marketo_data'], $data);
  drupal_add_js(array('marketo' => array('data' => $data)), 'setting');
}

function _marketo_webform_component_mapping($node, $submission) {
  module_load_include('inc', 'marketo', 'marketo');
  $mapping = array();
  $components = $node->webform['components'];
  foreach ($submission->data as $i => $element) {
    $result = db_select(MARKETO_SCHEMA_WEBFORM_COMPONENT)
        ->fields(MARKETO_SCHEMA_WEBFORM_COMPONENT)
        ->condition('nid', $components[$i]['nid'], '=')
        ->condition('cid', $components[$i]['cid'], '=')
        ->execute()
        ->fetchAssoc();
    $mapping[$result['marketo_key']] = $element['value'][0];
  }

  return $mapping;
}
