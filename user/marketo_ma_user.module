<?php

/**
 * @file
 * Module functions for Marketo MA User.
 */

/**
 * Implements hook_menu().
 */
function marketo_ma_user_menu() {
  $items['user/%user/marketo'] = array(
    'title' => 'Marketo',
    'page callback' => '_marketo_ma_user_display_lead',
    'page arguments' => array(1),
    'access callback' => 'marketo_ma_user_view_lead_data_callback',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 100,
  );
  $items['user/%user/marketo/lead'] = array(
    'title' => 'Lead',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['user/%user/marketo/activity'] = array(
    'title' => 'Activity',
    'page callback' => '_marketo_ma_user_display_lead_activity',
    'page arguments' => array(1),
    'access callback' => 'marketo_ma_user_view_lead_data_callback',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 100,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function marketo_ma_user_permission() {
  return array(
    'access all marketo lead data' => array(
      'title' => t('View all lead data'),
      'description' => t('Allows viewing of Marketo lead and activity data for any user.'),
    ),
    'access own marketo lead data' => array(
      'title' => t('View own lead data'),
    ),
  );
}

function marketo_ma_user_view_lead_data_callback($account) {
  global $user;
  return user_access('access all marketo lead data', $user) || (user_access('access own marketo lead data', $user) && $user->uid == $account->uid);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function marketo_ma_user_form_marketo_ma_admin_settings_form_alter(&$form, &$form_state, $form_id) {
  module_load_include('inc', 'webform', 'includes/webform.admin');
  $form['marketo_ma_tabs']['marketo_ma_user'] = array(
    '#title' => t('User Integration'),
    '#type' => 'fieldset',
    '#weight' => 5,
  );
  $form['marketo_ma_tabs']['marketo_ma_user']['marketo_ma_user_triggers'] = array(
    '#title' => t('Trigger a lead update on the following events:'),
    '#type' => 'checkboxes',
    '#default_value' => variable_get('marketo_ma_user_triggers', array(
      'login' => 'login',
      'insert' => 'insert',
      'update' => 'update',
    )),
    '#options' => array(
      'login' => t('User login'),
      'insert' => t('User registration / creation'),
      'update' => t('User update')
    ),
  );
  $form['marketo_ma_tabs']['marketo_ma_user']['marketo_ma_user_fieldmap'] = array(
    '#title' => t('User field mapping'),
    '#type' => 'fieldset',
    '#description' => t('When a lead update is triggered, the fields mapped below will be included in the data sent to Marketo. Select the associated Marketo field for each User field displayed.'),
    '#tree' => TRUE,
  );

  $user_fields = field_info_instances('user', 'user');
  $fieldmap = variable_get('marketo_ma_user_fieldmap', array());
  $options = _marketo_ma_get_field_options();

  if (count($user_fields)) {
    foreach ($user_fields as $key => $value) {
      $form['marketo_ma_tabs']['marketo_ma_user']['marketo_ma_user_fieldmap'][$key] = array(
        '#title' => $value['label'] . ' (' . $value['field_name'] . ')',
        '#type' => 'select',
        '#options' => array(MARKETO_MA_WEBFORM_COMPONENT_NONE => '- None -') + $options,
      );
      if (array_key_exists($key, $fieldmap)) {
        $form['marketo_ma_tabs']['marketo_ma_user']['marketo_ma_user_fieldmap'][$key]['#default_value'] = $fieldmap[$key];
      }
    }
  }
  else {
    $form['marketo_ma_tabs']['marketo_ma_user']['marketo_ma_user_fieldmap']['none'] = array(
      '#type' => 'item',
      '#title' => t('There are currently no user account fields available for mapping'),
      '#description' => t('Fields can be managed in <a href="@url">Account settings</a>.', array('@url' => url('admin/config/people/accounts/fields'))),
    );
  }
}

/**
 * Implements hook_user_login().
 */
function marketo_ma_user_user_login(&$edit, $account) {
  $triggers = variable_get('marketo_ma_user_triggers', array());
  if (array_key_exists('login', $triggers) && $triggers['login'] && isset($account->mail)) {
    $data = _marketo_ma_user_get_mapped_fields($account);
    $data['Email'] = $account->mail;
    marketo_ma_add_lead($account->mail, $data);
  }
}

/**
 * Implements hook_user_insert().
 */
function marketo_ma_user_user_insert(&$edit, $account, $category) {
  $triggers = variable_get('marketo_ma_user_triggers', array());
  if (array_key_exists('insert', $triggers) && $triggers['insert'] && isset($account->mail)) {
    $data = _marketo_ma_user_get_mapped_fields($account);
    $data['Email'] = $account->mail;
    marketo_ma_add_lead($account->mail, $data);
  }
}

/**
 * Implements hook_user_update().
 */
function marketo_ma_user_user_update(&$edit, $account, $category) {
  $triggers = variable_get('marketo_ma_user_triggers', array());
  if (array_key_exists('update', $triggers) && $triggers['update'] && isset($account->mail)) {
    // @todo decide how to handle an email address change
    // See https://api.drupal.org/comment/23088#comment-23088
    // When email changes, can we create a new lead then merge the two?
    $data = _marketo_ma_user_get_mapped_fields($account);
    $data['Email'] = $account->mail;
    marketo_ma_add_lead($account->mail, $data);
  }
}

/**
 * Returns Drupal user fields which have been mapped to Marketo fields
 * 
 * @param $account
 * @return array
 */
function _marketo_ma_user_get_mapped_fields($account) {
  $data = array();
  $fieldmap = variable_get('marketo_ma_user_fieldmap', array());
  foreach ($fieldmap as $key => $value) {
    if ($value != 'none' && isset($account->{$key}['und'][0]['value'])) {
      $data[$value] = $account->{$key}['und'][0]['value'];
    }
  }
  return $data;
}

/**
 * Returns a formatted table of lead information
 * 
 * @param $account
 * @return string
 */
function _marketo_ma_user_display_lead($account) {
  $output = "";
  $marketo = marketo_ma_get_lead($account->mail);
  if (!empty($marketo)) {
    $rows[] = array('Id', $marketo[0]->Id);
    foreach ($marketo[0]->attributes as $key => $value) {
      $rows[] = array($key, $value);
    }
    $header = array(t('Key'), t('Value'));
    $output = theme('table', array('header' => $header, 'rows' => $rows));
  }
  else {
    $output = t("No lead information found for @mail.", array('@mail' => $account->mail));
  }
  return $output;
}

/**
 * Returns a formatted table of lead activity
 * 
 * @param $account
 * @return string
 */
function _marketo_ma_user_display_lead_activity($account) {
  $output = "";
  $activity = marketo_ma_get_lead_activity($account->mail);
  if (!empty($activity)) {
    $header = array(t('ID'), t('Date/Time'), t('Activity Type'), t('Asset Name'));
    $fields = array('id', 'activityDateTime', 'activityType', 'mktgAssetName');
    foreach ($activity as $event) {
      $row = array();
      foreach ($fields as $field) {
        $row[] = $event->$field;
      }
      $rows[] = $row;
    }
    $output = theme('table', array('header' => $header, 'rows' => $rows));
  }
  else {
    $output = t("No activity found for @mail.", array('@mail' => $account->mail));
  }
  return $output;
}
