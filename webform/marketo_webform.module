<?php

/**
 * @file
 * Drupal Module: Marketo Webform
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function marketo_webform_form_webform_configure_form_alter(&$form, &$form_state, $form_id) {
  $node = $form['#node'];
  $is_active = isset($node->webform['marketo']['marketo_webform_is_active']) ? $node->webform['marketo']['marketo_webform_is_active'] : FALSE;

  $form['#submit'][] = '_marketo_webform_save_webform';
  $form['node']['webform']['marketo'] = array(
    '#title' => t('Marketo Options'),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE
  );
  $form['node']['webform']['marketo']['marketo_webform_is_active'] = array(
    '#title' => t('Capture Data'),
    '#type' => 'checkbox',
    '#description' => t('If checked, captured form information will be sent to Marketo'),
    '#default_value' => $is_active,
  );
}

function _marketo_webform_save_webform($form, &$form_state) {
  module_load_include('inc', 'marketo', 'includes/marketo');

  $node = $form['#node'];
  $values = $form_state['values'];

  $nid = $node->nid;

  db_delete(MARKETO_SCHEMA_WEBFORM)
      ->condition('nid', $nid)
      ->execute();

  db_insert(MARKETO_SCHEMA_WEBFORM)
      ->fields(array(
        'nid' => $nid,
        MARKETO_WEBFORM_FIELD_ACTIVE => $values['marketo_webform_is_active']
      ))
      ->execute();
}

/**
 * Implements hook_webform_component_insert()
 */
function marketo_webform_webform_component_insert($component) {
  module_load_include('inc', 'marketo', 'includes/marketo');
  db_insert(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->fields(array(
        'nid' => $component['nid'],
        'cid' => $component['cid'],
        MARKETO_WEBFORM_COMPONENT_KEY => $component['marketo']['marketo_webform_component_key']
      ))
      ->execute();
}

/**
 * Implements hook_webform_component_update()
 */
function marketo_webform_webform_component_update($component) {
  module_load_include('inc', 'marketo', 'includes/marketo');
  $num_updated = db_update(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->fields(array(
        MARKETO_WEBFORM_COMPONENT_KEY => $component['marketo']['marketo_webform_component_key'],
      ))
      ->condition('nid', $component['nid'])
      ->condition('cid', $component['cid'])
      ->execute();
  if ($num_updated == 0) {
    // likely made it here because this component existed before the marketo_webform module was enabled
    db_insert(MARKETO_SCHEMA_WEBFORM_COMPONENT)
        ->fields(array(
          'nid' => $component['nid'],
          'cid' => $component['cid'],
          MARKETO_WEBFORM_COMPONENT_KEY => $component['marketo']['marketo_webform_component_key']
        ))
        ->execute();
  }
}

/**
 * Implements hook_webform_component_delete()
 */
function marketo_webform_webform_component_delete($component) {
  module_load_include('inc', 'marketo', 'includes/marketo');
  db_delete(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->condition('nid', $component['nid'])
      ->condition('cid', $component['cid'])
      ->execute();
}

function marketo_webform_form_webform_component_edit_form_alter(&$form, &$form_state, $form_id) {
  module_load_include('inc', 'marketo', 'includes/marketo');

  $nid = $form['nid']['#value'];
  $cid = $form['cid']['#value'];

  $result = db_select(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->fields(MARKETO_SCHEMA_WEBFORM_COMPONENT)
      ->condition('nid', $nid, '=')
      ->condition('cid', $cid, '=')
      ->execute()
      ->fetchAssoc();

  $form['marketo'] = array(
    '#title' => t('Marketo Options'),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE
  );

  $form['marketo']['marketo_webform_component_key'] = array(
    '#title' => t('Map to Marketo field'),
    '#type' => 'select',
    '#description' => t('Select the field this component should be mapped to in Marketo'),
    '#default_value' => $result[MARKETO_WEBFORM_COMPONENT_KEY],
  );

  // marketo_webform_fields is multi-line, pipe "|" delimited data which needs to be parsed
  // first split it into rows of data
  $raw_options = preg_split('/(\r\n?|\n)/', trim(variable_get('marketo_webform_fields', MARKETO_WEBFORM_FIELD_DEFAULTS)));
  $options = array();

  // loop over all the rows getting the keys and values for the fields
  foreach ($raw_options as $row) {
    $field = explode('|', trim($row));
    $options[trim($field[0])] = trim($field[1]);
  }

  asort($options);
  $form['marketo']['marketo_webform_component_key']['#options'] = array(MARKETO_WEBFORM_COMPONENT_NONE => '- None -') + $options;
}

function marketo_webform_node_load($nodes, $types) {
  // Quick check to see if we need to do anything at all for these nodes.
  $webform_types = webform_variable_get('webform_node_types');
  if (count(array_intersect($types, $webform_types)) == 0) {
    return;
  }

  module_load_include('inc', 'marketo', 'includes/marketo');

  // Select all webforms that match these node IDs.
  $result = db_select(MARKETO_SCHEMA_WEBFORM)
      ->fields(MARKETO_SCHEMA_WEBFORM)
      ->condition('nid', array_keys($nodes), 'IN')
      ->execute()
      ->fetchAllAssoc('nid', PDO::FETCH_ASSOC);

  foreach ($result as $nid => $webform) {
    $nodes[$nid]->webform['marketo']['marketo_webform_is_active'] = $webform[MARKETO_WEBFORM_FIELD_ACTIVE];
  }
}

function marketo_webform_webform_submission_insert($node, $submission) {
  $data = _marketo_webform_component_mapping($node, $submission);
  
  // Check to see if an Email field has been provided. If not, we will try to use the current logged in user info
  if (!isset($data['Email']) || $data['Email'] == '') {
    global $user;
    if (isset($user->mail)) {
      $data['Email'] = $user->mail;
    }
  }
  
  marketo_prepare_data($data);
}

function _marketo_webform_component_mapping($node, $submission) {
  module_load_include('inc', 'marketo', 'includes/marketo');
  $mapping = array();
  $components = $node->webform['components'];
  // TODO: Change this to only a single db hit.. cid in ().. then process result set
  foreach ($submission->data as $i => $element) {
    $result = db_select(MARKETO_SCHEMA_WEBFORM_COMPONENT)
        ->fields(MARKETO_SCHEMA_WEBFORM_COMPONENT)
        ->condition('nid', $components[$i]['nid'], '=')
        ->condition('cid', $components[$i]['cid'], '=')
        ->execute()
        ->fetchAssoc();
    if ($result && $result['marketo_key'] !== MARKETO_WEBFORM_COMPONENT_NONE) {
      $mapping[$result['marketo_key']] = $element['value'][0];
    }
  }

  return $mapping;
}
