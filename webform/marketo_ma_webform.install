<?php

/**
 * @file
 * Install and schema hooks for Marketo MA Webform module.
 */

/**
 * Implements hook_schema().
 */
function marketo_ma_webform_schema() {
  $schema = array();
  $schema[MARKETO_MA_SCHEMA_WEBFORM] = array(
    'description' => 'Webform Settings',
    'primary key' => array('nid'),
    'unique keys' => array(),
    'fields' => array(
      'nid' => array(
        'description' => 'The node identifier of a webform.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      MARKETO_MA_WEBFORM_FIELD_ACTIVE => array(
        // Is this webform marketo enabled.
        'description' => 'Should this form send data to Marketo',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      MARKETO_MA_WEBFORM_OPTIONS => array(
        'description' => 'Additional options for controlling tracking behavior',
        'type' => 'blob',
      ),
    ),
  );
  $schema[MARKETO_MA_SCHEMA_WEBFORM_COMPONENT] = array(
    'description' => 'Webform Component Settings',
    'primary key' => array('nid', 'cid'),
    'unique keys' => array(),
    'fields' => array(
      'nid' => array(
        'description' => 'The node identifier of a webform.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'cid' => array(
        'description' => 'The identifier for this component within this node, starts at 0 for each node.',
        'type' => 'int',
        'size' => 'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      MARKETO_MA_WEBFORM_COMPONENT_KEY => array(
        'description' => 'The Marketo form field.',
        'type' => 'varchar',
        'length' => 128,
      ),
    ),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function marketo_ma_webform_uninstall() {
  /*
   * This is required in order to pick up the constants defined in
   * marketo_ma.module. This hook will execute before the attempt to remove
   * the schema occurs and ensure that uninstall does not leave any orphaned
   * tables. See https://api.drupal.org/comment/15344#comment-15344
   */
  drupal_load('module', 'marketo_ma');
}

/**
 * Add field for webform specific tracking options.
 */
function marketo_ma_webform_update_7100(&$sandbox) {
  db_add_field(
    MARKETO_MA_SCHEMA_WEBFORM, MARKETO_MA_WEBFORM_OPTIONS, array(
      'description' => 'Additional options for controlling tracking behavior',
      'type' => 'blob',
    )
  );
  return t('Option field created.');
}

/**
 * Webforms which previously used the SOAP API will be updated to use REST API.
 */
function marketo_ma_webform_update_7200(&$sandbox) {
  $message = '';
  $webforms = db_select('marketo_ma_webform', 'w')
    ->fields('w')
    ->execute()
    ->fetchAll();
  foreach ($webforms as $webform) {
    $options = unserialize($webform->options);
    $old = $options['tracking_method'];
    $update = FALSE;
    if ($old == 'soap') {
      $new = 'rest';
      $options['tracking_method'] = $new;
      $update = TRUE;
    }
    elseif ($old == 'soap_async') {
      $new = 'rest_async';
      $options['tracking_method'] = $new;
      $update = TRUE;
    }
    
    if ($update) {
      db_merge('marketo_ma_webform')
        ->key(array('nid' => $webform->nid))
        ->fields(array(
          'options' => serialize($options),
        ))
        ->execute();
      $message .= t('Webform [!nid] tracking method updated from [!old] to [!new]', array('!nid' => $webform->nid, '!old' => $old, '!new' => $new));
    }
  }
  if ($message == '') $message = t('No webform updates required');
  return $message;
}