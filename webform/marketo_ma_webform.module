<?php

/**
 * @file
 * Module functions for Marketo MA Webform.
 */

/**
 * Implements hook_permission().
 */
function marketo_ma_webform_permission() {
  return array(
    'administer marketo webform settings' => array(
      'title' => t('Webform settings'),
      'description' => t('Administer Marketo settings on Webforms.'),
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function marketo_ma_webform_form_marketo_ma_admin_settings_form_alter(&$form, &$form_state, $form_id) {
  module_load_include('inc', 'webform', 'includes/webform.admin');
  $form['marketo_ma_tabs']['marketo_ma_webform'] = array(
    '#title' => t('Webform Integration'),
    '#type' => 'fieldset',
    '#description' => t('Configuration is managed on each individual webform. This section lists all of the content on the site that may have a webform attached to it.'),
    '#weight' => 10,
  );
  $form['marketo_ma_tabs']['marketo_ma_webform']['marketo_ma_webform_list'] = array(
    '#markup' => marketo_ma_webform_list(),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function marketo_ma_webform_form_webform_configure_form_alter(&$form, &$form_state, $form_id) {
  $node = $form['#node'];
  $is_active = isset($node->webform['marketo']['marketo_ma_webform_is_active']) ? $node->webform['marketo']['marketo_ma_webform_is_active'] : FALSE;

  $form['#submit'][] = '_marketo_ma_webform_save_webform';
  $form['node']['webform']['marketo'] = array(
    '#title' => t('Marketo Options'),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['node']['webform']['marketo']['marketo_ma_webform_is_active'] = array(
    '#title' => t('Capture Data'),
    '#type' => 'checkbox',
    '#description' => t('If checked, captured form information will be sent to Marketo'),
    '#default_value' => $is_active,
  );
}

/**
 * Inserts marketo webform settings into the database.
 */
function _marketo_ma_webform_save_webform($form, &$form_state) {
  $node = $form['#node'];
  $values = $form_state['values'];

  $nid = $node->nid;

  db_merge(MARKETO_MA_SCHEMA_WEBFORM)
    ->key(array('nid' => $nid))
    ->fields(array(
      MARKETO_MA_WEBFORM_FIELD_ACTIVE => $values['marketo_ma_webform_is_active'],
    ))
    ->execute();
}

/**
 * Implements hook_webform_component_insert().
 */
function marketo_ma_webform_webform_component_insert($component) {
  db_insert(MARKETO_MA_SCHEMA_WEBFORM_COMPONENT)
    ->fields(array(
      'nid' => $component['nid'],
      'cid' => $component['cid'],
      MARKETO_MA_WEBFORM_COMPONENT_KEY => $component['marketo']['marketo_ma_webform_component_key'],
    ))
    ->execute();
}

/**
 * Implements hook_webform_component_update().
 */
function marketo_ma_webform_webform_component_update($component) {
  if (isset($component['marketo'])) {
    db_merge(MARKETO_MA_SCHEMA_WEBFORM_COMPONENT)
      ->key(array(
        'nid' => $component['nid'],
        'cid' => $component['cid'],
      ))
      ->fields(array(
        MARKETO_MA_WEBFORM_COMPONENT_KEY => $component['marketo']['marketo_ma_webform_component_key'],
      ))
      ->execute();
  }
}

/**
 * Implements hook_webform_component_delete().
 */
function marketo_ma_webform_webform_component_delete($component) {
  db_delete(MARKETO_MA_SCHEMA_WEBFORM_COMPONENT)
    ->condition('nid', $component['nid'])
    ->condition('cid', $component['cid'])
    ->execute();
}

/**
 * Implements hook_form_alter().
 */
function marketo_ma_webform_form_webform_component_edit_form_alter(&$form, &$form_state, $form_id) {
  $nid = $form['nid']['#value'];
  $cid = $form['cid']['#value'];

  $result = db_select(MARKETO_MA_SCHEMA_WEBFORM_COMPONENT)
    ->fields(MARKETO_MA_SCHEMA_WEBFORM_COMPONENT)
    ->condition('nid', $nid, '=')
    ->condition('cid', $cid, '=')
    ->execute()
    ->fetchAssoc();

  $form['marketo'] = array(
    '#title' => t('Marketo Options'),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['marketo']['marketo_ma_webform_component_key'] = array(
    '#title' => t('Map to Marketo field'),
    '#type' => 'select',
    '#description' => t('Select the field this component should be mapped to in Marketo'),
    '#default_value' => $result[MARKETO_MA_WEBFORM_COMPONENT_KEY],
  );

  /*
   * marketo_ma_webform_fields is multi-line, pipe "|" delimited data
   * which needs to be parsed. First split it into rows of data.
   */
  $raw_options = preg_split('/(\r\n?|\n)/', trim(variable_get('marketo_ma_webform_fields', MARKETO_MA_WEBFORM_FIELD_DEFAULTS)));
  $options = array();

  // Loop over all the rows getting the keys and values for the fields.
  foreach ($raw_options as $row) {
    $field = explode('|', trim($row));
    $options[trim($field[0])] = trim($field[1]);
  }

  asort($options);
  $form['marketo']['marketo_ma_webform_component_key']['#options'] = array(MARKETO_MA_WEBFORM_COMPONENT_NONE => '- None -') + $options;
}

/**
 * Implements node_load().
 */
function marketo_ma_webform_node_load($nodes, $types) {
  // Quick check to see if we need to do anything at all for these nodes.
  $webform_types = webform_variable_get('webform_node_types');
  if (count(array_intersect($types, $webform_types)) == 0) {
    return;
  }

  // Select all webforms that match these node IDs.
  $result = db_select(MARKETO_MA_SCHEMA_WEBFORM)
    ->fields(MARKETO_MA_SCHEMA_WEBFORM)
    ->condition('nid', array_keys($nodes), 'IN')
    ->execute()
    ->fetchAllAssoc('nid', PDO::FETCH_ASSOC);

  foreach ($result as $nid => $webform) {
    $nodes[$nid]->webform['marketo']['marketo_ma_webform_is_active'] = $webform[MARKETO_MA_WEBFORM_FIELD_ACTIVE];
  }
}

/**
 * Implements hook_webform_submission_insert().
 */
function marketo_ma_webform_webform_submission_insert($node, $submission) {
  if (isset($node->webform['marketo']['marketo_ma_webform_is_active']) &&
    $node->webform['marketo']['marketo_ma_webform_is_active']) {
    $data = _marketo_ma_webform_component_mapping($node, $submission);

    /*
     * Check to see if an Email field has been provided. If not, we will try
     * to use the current logged in user info
     */
    if (!isset($data['Email']) || $data['Email'] == '') {
      global $user;
      if (isset($user->mail)) {
        $data['Email'] = $user->mail;
      }
    }

    if (array_key_exists('Email', $data)) {
      marketo_ma_add_lead($data['Email'], $data);
    }
  }
}

/**
 * Maps webform components to marketo fields.
 *
 * @param object $node
 *   The node object containing the current webform
 * @param object $submission
 *   The webform submission object to be saved into the database
 *
 * @return array
 *   Component to marketo key mapping
 */
function _marketo_ma_webform_component_mapping($node, $submission) {
  $mapping = array();
  $components = $node->webform['components'];
  // TODO: Change this to only a single db hit. cid in (). then process result.
  foreach ($submission->data as $i => $element) {
    $result = db_select(MARKETO_MA_SCHEMA_WEBFORM_COMPONENT)
      ->fields(MARKETO_MA_SCHEMA_WEBFORM_COMPONENT)
      ->condition('nid', $components[$i]['nid'], '=')
      ->condition('cid', $components[$i]['cid'], '=')
      ->execute()
      ->fetchAssoc();
    if ($result && $result['marketo_ma_key'] !== MARKETO_MA_WEBFORM_COMPONENT_NONE) {
      if (_marketo_ma_webform_is_webform_v3()) {
        $mapping[$result['marketo_ma_key']] = $element['value'][0];
      }
      else {
        $mapping[$result['marketo_ma_key']] = $element[0];
      }
    }
  }

  return $mapping;
}

/**
 * Checks the Webform module to see if it is version 3.x.
 *
 * We must determine if we are using Webform 3.x or something later.
 * Webform 4.x introduced a change to the submission structure
 * that we must be aware of.
 * https://drupal.org/node/1609324#submission-structure
 *
 * @return bool
 *   Returns TRUE if the Webform module being used is version 3.x
 */
function _marketo_ma_webform_is_webform_v3() {
  static $is_webform_v3;
  if (!isset($is_webform_v3)) {
    $webform_info = system_get_info('module', 'webform');
    $webform_version = str_replace(DRUPAL_CORE_COMPATIBILITY . '-', '', $webform_info['version']);
    $v3 = drupal_parse_dependency("Webform (3.x)");
    $is_webform_v3 = is_null(drupal_check_incompatibility($v3, $webform_version));
  }
  return $is_webform_v3;
}

/**
 * Finds Webforms and associated Marketo configuration for display.
 * 
 * @return string
 *   A themed table of webforms defined on the site
 */
function marketo_ma_webform_list() {
  $webform_types = webform_variable_get('webform_node_types');

  $nodes = array();
  if ($webform_types) {
    $components = db_select(MARKETO_MA_SCHEMA_WEBFORM_COMPONENT, 'mmwc');
    $components->addField('mmwc', 'nid');
    $components->addExpression('count(' . MARKETO_MA_WEBFORM_COMPONENT_KEY . ')', 'components');
    $components->condition('marketo_ma_key', 'none', '<>');
    $components->groupBy('nid');

    $nodes = db_select('node', 'n');
    $nodes->leftJoin(MARKETO_MA_SCHEMA_WEBFORM, 'mmw', 'n.nid = mmw.nid');
    $nodes->leftJoin($components, 'mmwc', 'n.nid = mmwc.nid');
    $nodes->fields('n', array('nid', 'title'));
    $nodes->addField('mmw', MARKETO_MA_WEBFORM_FIELD_ACTIVE);
    $nodes->addField('mmwc', 'components');
    $result = $nodes->condition('n.type', $webform_types, 'IN')
      ->execute()
      ->fetchAllAssoc('nid');
  }

  return marketo_ma_webform_theme_list($result);
}

/**
 * Generate a list of all webforms avaliable on this site.
 */
function marketo_ma_webform_theme_list($nodes) {
  $header = array(
    t('Title'),
    t('Tracking Enabled'),
    t('Components Mapped'),
    array('data' => t('Manage'), 'colspan' => '3'),
  );

  $rows = array();
  foreach ($nodes as $node) {
    $rows[] = array(
      l($node->title, 'node/' . $node->nid),
      $node->is_active ? t('Yes') : t('No'),
      $node->components ? $node->components : 0,
      node_access('update', $node) ? l(t('Form components'), 'node/' . $node->nid . '/webform') : '',
      node_access('update', $node) ? l(t('Form Settings'), 'node/' . $node->nid . '/webform/configure') : '',
      node_access('update', $node) ? l(t('Node'), 'node/' . $node->nid . '/edit') : '',
    );
  }

  if (empty($rows)) {
    $message = t('There are currently no webforms on your site.');
    $rows[] = array(
      array('data' => $message, 'colspan' => 4),
    );
  }

  return theme('table', array('header' => $header, 'rows' => $rows));
}
